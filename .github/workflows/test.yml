name: Test
on:
  push: { branches: [ "master" ] }
  pull_request: { branches: [ "master" ] }

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-cppyythonizations:
    runs-on: ${{ matrix.on }}
    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11"]
        on:
          - ubuntu-22.04
          - macos-11
        target:
          - check
        include:
          - python: "3.11"
            on: ubuntu-22.04
            target: check-valgrind
    steps:
      - uses: actions/checkout@v2
        with: { submodules: recursive }
      - uses: conda-incubator/setup-miniconda@v2
        with: { miniforge-variant: "Mambaforge", miniforge-version: "latest", python-version: "${{matrix.python}}" }
      - name: install valgrind and libc debug symbols
        shell: bash -l {0}
        run: |
          sudo apt update
          sudo apt install libc6-dbg valgrind

          mamba install -n test -y pip
          pip install pytest-valgrind
        if: ${{ matrix.target == 'check-valgrind' }}
      - name: install dependencies
        shell: bash -l {0}
        run: |
          mamba env update --quiet -n test -f environment.yml
          conda list
      - name: make check
        shell: bash -l {0}
        run: |
          pytest -n 2 --isolate --doctest-modules -vv
        if: ${{ matrix.target == 'check' }}
      - name: make check-valgrind
        shell: bash -l {0}
        run: |
          PYTHONMALLOC=malloc valgrind --show-leak-kinds=definite --log-file=/tmp/valgrind-output python -m pytest -vv --doctest-modules --valgrind --valgrind-log=/tmp/valgrind-output
        if: ${{ matrix.target == 'check-valgrind' }}
      - uses: flatsurf/actions/show-logs@main
        if: ${{ always() }}
